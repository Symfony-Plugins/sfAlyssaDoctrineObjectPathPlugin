# sfAlyssaDoctrineObjectPathPlugin plugin #

## Introduction ##

This plugin adds ObjectPath support to Doctrine.

This syntax makes it very easy to do sorting and filtering on foreign fields. ObjectPaths are dot-separated relation-names that relate from one object to another and this implementation translates the ObjectPaths to table-aliasses. The PropertyPaths are ObjectPaths with a field-name last element.    

This plugin is based on the work of Leon van der Ree and your plugin
 [sfPropelObjectPathBehaviorPlugin](http://www.symfony-project.org/plugins/sfPropelObjectPathBehaviorPlugin).

Doctrine version 1.2 is fully supported. For Doctrine version 1.0 and 1.1 there are some restrictions (it's not possible set up a customized query class) with the use of [sfDataSourcePlugin](http://www.symfony-project.org/plugins/sfDataSourcePlugin). 

Note: this plugin implement only a left join union. Other types are not supported yet.  


## Installation ##

1.Download and install the plugin

    ./symfony plugin:install sfAlyssaSmsPlugin
    
2.Check that sfAlyssaDoctrineObjectPathPlugin is enabled before sfDoctrinePlugin. 

    [php]
    public function setup()
    {
       $this->enablePlugins('sfAlyssaDoctrineObjectPathPlugin');
       $this->enablePlugins('sfDoctrinePlugin');
       ...
    }

3.Clear the cache

    ./symfony cc



## Example ##

So a very simple ObjectPath from City to Country is simply "Country" and from Country to City it would be "City":
In other words the relation-name.

However ObjectPaths support dots to 'jump' from object to object. Also you can use PropertyPaths, similar to ObjectPaths, to 'jump' from object to field.
So for example from Review to Book to Author the ObjectPath would be "Book.Author" and the PropertyPath would be "Book.Author.FirstName". 


In Php-code this shows up as:

    [php]
    $query = Doctrine_Query::create();
    $reviews = $query->
      from('Review')->
      joinByObjectPath('Book.Author')->
      orderByProperyPath('Book.Author.FirstName asc')->
      excecute();

to find all reviews, left joined with their Books, left joined with their Authors.


For Doctrine 1.0 and 1.1, the php-code look like:

    [php]
    $query = sfAlyssaDoctrineQuery::create();
    $reviews = $query->
      from('Review')->
      joinByObjectPath('Book.Author')->
      orderByProperyPath('Book.Author.FirstName asc')->
      excecute();

in this case, we need an instance of 'sfAlyssaDoctrineQuery' customized doctrine query class.

There are some extra methods working with PropertyPaths:

    [php]
    $query = Doctrine_Query::create();
    $reviews = $query->
      from('Review')->
      joinByObjectPath('Book.Author')->
      whereByProperyPath('Book.Author.FirstName = ?', 'Sergio')->
      orderByPropertyPath('Book.Title')->
      excecute();

similar to previous query for Doctrine 1.2, but filtering by FirstName property of Author and ordering by Title property of Book.



## Note ##

The sfAlyssaDoctrineObjectPathPlugin is also used in the [sfDataSourcePlugin](http://www.symfony-project.org/plugins/sfDataSourcePlugin), but not required.



## Todo ##

* Implement more join types.


## Changelog ##

### 2010-04-10 | 1.0.1 ###
* Fixed documentation

### 2010-04-06 | 1.0.0 ###
* Initial import
